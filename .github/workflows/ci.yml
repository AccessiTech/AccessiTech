name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
    
    - name: Install dependencies
      run: yarn install --frozen-lockfile
    
    - name: Check code formatting
      run: yarn format:check
    
    - name: Run ESLint
      run: yarn lint
    
    - name: Run tests with coverage
      run: yarn test:coverage

    - name: Check coverage thresholds
      run: |
        COVERAGE_SUMMARY=$(cat coverage/coverage-summary.json)
        LINES_PCT=$(echo $COVERAGE_SUMMARY | jq -r '.total.lines.pct')
        STATEMENTS_PCT=$(echo $COVERAGE_SUMMARY | jq -r '.total.statements.pct')
        FUNCTIONS_PCT=$(echo $COVERAGE_SUMMARY | jq -r '.total.functions.pct')
        BRANCHES_PCT=$(echo $COVERAGE_SUMMARY | jq -r '.total.branches.pct')
        
        echo "Coverage Summary:"
        echo "Lines: $LINES_PCT%"
        echo "Statements: $STATEMENTS_PCT%"
        echo "Functions: $FUNCTIONS_PCT%"
        echo "Branches: $BRANCHES_PCT%"
        
        if (( $(echo "$LINES_PCT < 80" | bc -l) )) || \
           (( $(echo "$STATEMENTS_PCT < 80" | bc -l) )) || \
           (( $(echo "$FUNCTIONS_PCT < 80" | bc -l) )) || \
           (( $(echo "$BRANCHES_PCT < 80" | bc -l) )); then
          echo "❌ Coverage is below 80%"
          exit 1
        fi
        echo "✅ Coverage meets minimum threshold of 80%"

    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: coverage/
        retention-days: 14

    - name: Comment PR with coverage info
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const summary = JSON.parse(fs.readFileSync('coverage/coverage-summary.json', 'utf8'));
          const total = summary.total;
          
          const comment = `## Coverage Report
          | Type | Coverage |
          |------|----------|
          | Lines | ${total.lines.pct}% |
          | Statements | ${total.statements.pct}% |
          | Functions | ${total.functions.pct}% |
          | Branches | ${total.branches.pct}% |
          
          [View detailed coverage report](${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID})`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.name,
            body: comment
          });
    
    - name: Build
      run: yarn build:prod
    
    - name: Run axe accessibility tests
      run: |
        yarn add -D @axe-core/cli
        yarn axe 'http://localhost:5173' --exit
